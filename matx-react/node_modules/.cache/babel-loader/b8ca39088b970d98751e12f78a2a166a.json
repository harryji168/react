{"ast":null,"code":"var _jsxFileName = \"/home/harryji/react/matx-react/src/app/contexts/NotificationContext.js\";\nimport React, { createContext, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'LOAD_NOTIFICATIONS':\n      {\n        return { ...state,\n          notifications: action.payload\n        };\n      }\n\n    case 'DELETE_NOTIFICATION':\n      {\n        return { ...state,\n          notifications: action.payload\n        };\n      }\n\n    case 'CLEAR_NOTIFICATIONS':\n      {\n        return { ...state,\n          notifications: action.payload\n        };\n      }\n\n    default:\n      {\n        return { ...state\n        };\n      }\n  }\n};\n\nconst NotificationContext = createContext({\n  notifications: [],\n  deleteNotification: () => {},\n  clearNotifications: () => {},\n  getNotifications: () => {},\n  createNotification: () => {}\n});\nexport const NotificationProvider = _ref => {\n  let {\n    settings,\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, []);\n\n  const deleteNotification = async notificationID => {\n    try {\n      const res = await axios.post('/api/notification/delete', {\n        id: notificationID\n      });\n      dispatch({\n        type: 'DELETE_NOTIFICATION',\n        payload: res.data\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const clearNotifications = async () => {\n    try {\n      const res = await axios.post('/api/notification/delete-all');\n      dispatch({\n        type: 'CLEAR_NOTIFICATIONS',\n        payload: res.data\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const getNotifications = async () => {\n    try {\n      const res = await axios.get('/api/notification');\n      dispatch({\n        type: 'LOAD_NOTIFICATIONS',\n        payload: res.data\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const createNotification = async notification => {\n    try {\n      const res = await axios.post('/api/notification/add', {\n        notification\n      });\n      dispatch({\n        type: 'CREATE_NOTIFICATION',\n        payload: res.data\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    getNotifications();\n  }, []);\n  return /*#__PURE__*/React.createElement(NotificationContext.Provider, {\n    value: {\n      notifications: state.notifications,\n      deleteNotification,\n      clearNotifications,\n      getNotifications,\n      createNotification\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default NotificationContext;","map":{"version":3,"sources":["/home/harryji/react/matx-react/src/app/contexts/NotificationContext.js"],"names":["React","createContext","useEffect","useReducer","axios","reducer","state","action","type","notifications","payload","NotificationContext","deleteNotification","clearNotifications","getNotifications","createNotification","NotificationProvider","settings","children","dispatch","notificationID","res","post","id","data","e","console","error","get","notification"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'LOAD_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'DELETE_NOTIFICATION': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'CLEAR_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nconst NotificationContext = createContext({\n    notifications: [],\n    deleteNotification: () => {},\n    clearNotifications: () => {},\n    getNotifications: () => {},\n    createNotification: () => {},\n})\n\nexport const NotificationProvider = ({ settings, children }) => {\n    const [state, dispatch] = useReducer(reducer, [])\n\n    const deleteNotification = async (notificationID) => {\n        try {\n            const res = await axios.post('/api/notification/delete', {\n                id: notificationID,\n            })\n            dispatch({\n                type: 'DELETE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const clearNotifications = async () => {\n        try {\n            const res = await axios.post('/api/notification/delete-all')\n            dispatch({\n                type: 'CLEAR_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const getNotifications = async () => {\n        try {\n            const res = await axios.get('/api/notification')\n            dispatch({\n                type: 'LOAD_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n    const createNotification = async (notification) => {\n        try {\n            const res = await axios.post('/api/notification/add', {\n                notification,\n            })\n            dispatch({\n                type: 'CREATE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    useEffect(() => {\n        getNotifications()\n    }, [])\n\n    return (\n        <NotificationContext.Provider\n            value={{\n                notifications: state.notifications,\n                deleteNotification,\n                clearNotifications,\n                getNotifications,\n                createNotification,\n            }}\n        >\n            {children}\n        </NotificationContext.Provider>\n    )\n}\n\nexport default NotificationContext\n"]},"metadata":{},"sourceType":"module"}