{"ast":null,"code":"export const SET_USER_NAVIGATION = 'SET_USER_NAVIGATION';\n\nconst getfilteredNavigations = function () {\n  let navList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let role = arguments.length > 1 ? arguments[1] : undefined;\n  return navList.reduce((array, nav) => {\n    if (nav.auth) {\n      if (nav.auth.includes(role)) {\n        array.push(nav);\n      }\n    } else {\n      if (nav.children) {\n        nav.children = getfilteredNavigations(nav.children, role);\n        array.push(nav);\n      } else {\n        array.push(nav);\n      }\n    }\n\n    return array;\n  }, []);\n};\n\nexport function getNavigationByUser() {\n  return (dispatch, getState) => {\n    let {\n      user,\n      navigations = []\n    } = getState();\n    let filteredNavigations = getfilteredNavigations(navigations, user.role);\n    dispatch({\n      type: SET_USER_NAVIGATION,\n      payload: [...filteredNavigations]\n    });\n  };\n}","map":{"version":3,"sources":["/home/harryji/react/matx-react/src/app/redux/actions/NavigationAction.js"],"names":["SET_USER_NAVIGATION","getfilteredNavigations","navList","role","reduce","array","nav","auth","includes","push","children","getNavigationByUser","dispatch","getState","user","navigations","filteredNavigations","type","payload"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAG,qBAA5B;;AAEP,MAAMC,sBAAsB,GAAG,YAAwB;AAAA,MAAvBC,OAAuB,uEAAb,EAAa;AAAA,MAATC,IAAS;AACnD,SAAOD,OAAO,CAACE,MAAR,CAAe,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAClC,QAAIA,GAAG,CAACC,IAAR,EAAc;AACV,UAAID,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAkBL,IAAlB,CAAJ,EAA6B;AACzBE,QAAAA,KAAK,CAACI,IAAN,CAAWH,GAAX;AACH;AACJ,KAJD,MAIO;AACH,UAAIA,GAAG,CAACI,QAAR,EAAkB;AACdJ,QAAAA,GAAG,CAACI,QAAJ,GAAeT,sBAAsB,CAACK,GAAG,CAACI,QAAL,EAAeP,IAAf,CAArC;AACAE,QAAAA,KAAK,CAACI,IAAN,CAAWH,GAAX;AACH,OAHD,MAGO;AACHD,QAAAA,KAAK,CAACI,IAAN,CAAWH,GAAX;AACH;AACJ;;AACD,WAAOD,KAAP;AACH,GAdM,EAcJ,EAdI,CAAP;AAeH,CAhBD;;AAkBA,OAAO,SAASM,mBAAT,GAA+B;AAClC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B,QAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,WAAW,GAAG;AAAtB,QAA6BF,QAAQ,EAAzC;AAEA,QAAIG,mBAAmB,GAAGf,sBAAsB,CAACc,WAAD,EAAcD,IAAI,CAACX,IAAnB,CAAhD;AAEAS,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEjB,mBADD;AAELkB,MAAAA,OAAO,EAAE,CAAC,GAAGF,mBAAJ;AAFJ,KAAD,CAAR;AAIH,GATD;AAUH","sourcesContent":["export const SET_USER_NAVIGATION = 'SET_USER_NAVIGATION'\n\nconst getfilteredNavigations = (navList = [], role) => {\n    return navList.reduce((array, nav) => {\n        if (nav.auth) {\n            if (nav.auth.includes(role)) {\n                array.push(nav)\n            }\n        } else {\n            if (nav.children) {\n                nav.children = getfilteredNavigations(nav.children, role)\n                array.push(nav)\n            } else {\n                array.push(nav)\n            }\n        }\n        return array\n    }, [])\n}\n\nexport function getNavigationByUser() {\n    return (dispatch, getState) => {\n        let { user, navigations = [] } = getState()\n\n        let filteredNavigations = getfilteredNavigations(navigations, user.role)\n\n        dispatch({\n            type: SET_USER_NAVIGATION,\n            payload: [...filteredNavigations],\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}