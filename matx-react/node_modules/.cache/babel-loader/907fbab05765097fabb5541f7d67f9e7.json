{"ast":null,"code":"var _jsxFileName = \"/home/harryji/react/matx-react/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n});\n\nclass ConsecutiveSnackbars extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.queue = [];\n    this.state = {\n      open: false\n    };\n\n    this.handleClick = message => () => {\n      this.queue.push({\n        message,\n        key: new Date().getTime()\n      });\n\n      if (this.state.open) {\n        // immediately begin dismissing current message\n        // to start showing new one\n        this.setState({\n          open: false\n        });\n      } else {\n        this.processQueue();\n      }\n    };\n\n    this.processQueue = () => {\n      if (this.queue.length > 0) {\n        this.setState({\n          messageInfo: this.queue.shift(),\n          open: true\n        });\n      }\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleExited = () => {\n      this.processQueue();\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      messageInfo = {}\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleClick('Message A'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"Show message A\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleClick('Message B'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Show message B\"), /*#__PURE__*/React.createElement(Snackbar, {\n      key: messageInfo.key,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: this.state.open,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      onExited: this.handleExited,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        id: \"message-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 30\n        }\n      }, messageInfo.message),\n      action: [/*#__PURE__*/React.createElement(Button, {\n        key: \"undo\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, \"UNDO\"), /*#__PURE__*/React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        className: classes.close,\n        onClick: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }\n      }))],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nConsecutiveSnackbars.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ConsecutiveSnackbars);","map":{"version":3,"sources":["/home/harryji/react/matx-react/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx"],"names":["React","PropTypes","withStyles","Button","Snackbar","IconButton","CloseIcon","styles","theme","close","padding","spacing","ConsecutiveSnackbars","Component","queue","state","open","handleClick","message","push","key","Date","getTime","setState","processQueue","length","messageInfo","shift","handleClose","event","reason","handleExited","render","classes","props","vertical","horizontal","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst styles = (theme) => ({\n    close: {\n        padding: theme.spacing(0.5),\n    },\n})\n\nclass ConsecutiveSnackbars extends React.Component {\n    queue = []\n\n    state = {\n        open: false,\n    }\n\n    handleClick = (message) => () => {\n        this.queue.push({\n            message,\n            key: new Date().getTime(),\n        })\n\n        if (this.state.open) {\n            // immediately begin dismissing current message\n            // to start showing new one\n            this.setState({ open: false })\n        } else {\n            this.processQueue()\n        }\n    }\n\n    processQueue = () => {\n        if (this.queue.length > 0) {\n            this.setState({\n                messageInfo: this.queue.shift(),\n                open: true,\n            })\n        }\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n        this.setState({ open: false })\n    }\n\n    handleExited = () => {\n        this.processQueue()\n    }\n\n    render() {\n        const { classes } = this.props\n        const { messageInfo = {} } = this.state\n\n        return (\n            <div>\n                <Button onClick={this.handleClick('Message A')}>\n                    Show message A\n                </Button>\n                <Button onClick={this.handleClick('Message B')}>\n                    Show message B\n                </Button>\n                <Snackbar\n                    key={messageInfo.key}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={6000}\n                    onClose={this.handleClose}\n                    onExited={this.handleExited}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    message={<span id=\"message-id\">{messageInfo.message}</span>}\n                    action={[\n                        <Button\n                            key=\"undo\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={this.handleClose}\n                        >\n                            UNDO\n                        </Button>,\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            className={classes.close}\n                            onClick={this.handleClose}\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nConsecutiveSnackbars.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(ConsecutiveSnackbars)\n"]},"metadata":{},"sourceType":"module"}