{"ast":null,"code":"import Mock from '../mock';\nimport * as _ from 'lodash';\nimport shortId from 'shortid'; // board => list => cardList\n\nconst ScrumBoardDB = {\n  boardList: [{\n    id: 'c5d7498bbcb84d81fc7454448871ac6a6e',\n    title: 'Matx React',\n    list: [{\n      id: shortId.generate(),\n      title: 'Drag and Drop',\n      cardList: [{\n        id: shortId.generate(),\n        title: 'Beautiful DnD',\n        coverImage: '/assets/images/sq-9.jpg',\n        members: ['323sa680b3249760ea21rt47', '7863a6802ez0e277a0f98534', '14663a3406eb47ffa63d4fec9429cb71', '43bd9bc59d164b5aea498e3ae1c24c3c', 'e929b1d790ab49968ed8e34648553df4'],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        attachments: [{\n          name: 'sky-life.jpg',\n          size: '1.2 MB',\n          url: '/assets/images/sq-11.jpg'\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: '7863a6802ez0e277a0f98534',\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }, {\n        id: shortId.generate(),\n        title: 'Nested DnD',\n        coverImage: '/assets/images/sq-11.jpg',\n        members: ['323sa680b3249760ea21rt47', '7863a6802ez0e277a0f98534', '14663a3406eb47ffa63d4fec9429cb71', '43bd9bc59d164b5aea498e3ae1c24c3c', 'e929b1d790ab49968ed8e34648553df4'],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        attachments: [{\n          name: 'sky-life.jpg',\n          size: '1.2 MB',\n          url: '/assets/images/sq-11.jpg'\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: '323sa680b3249760ea21rt47',\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }]\n    }, {\n      id: shortId.generate(),\n      title: 'Chat App',\n      cardList: [{\n        id: shortId.generate(),\n        title: 'Beautiful DnD',\n        coverImage: '/assets/images/sq-11.jpg',\n        members: ['323sa680b3249760ea21rt47', '7863a6802ez0e277a0f98534', '14663a3406eb47ffa63d4fec9429cb71', '43bd9bc59d164b5aea498e3ae1c24c3c', 'e929b1d790ab49968ed8e34648553df4'],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        attachments: [{\n          name: 'sky-life.jpg',\n          size: '1.2 MB',\n          url: '/assets/images/sq-11.jpg'\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: 'e929b1d790ab49968ed8e34648553df4',\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }, {\n        id: shortId.generate(),\n        title: 'Nested DnD',\n        coverImage: '/assets/images/sq-13.jpg',\n        members: ['323sa680b3249760ea21rt47', '7863a6802ez0e277a0f98534', '14663a3406eb47ffa63d4fec9429cb71', '43bd9bc59d164b5aea498e3ae1c24c3c', 'e929b1d790ab49968ed8e34648553df4'],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        attachments: [{\n          name: 'sky-life.jpg',\n          size: '1.2 MB',\n          url: '/assets/images/sq-11.jpg'\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: 'e929b1d790ab49968ed8e34648553df4',\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }]\n    }],\n    members: [// only member id\n    '323sa680b3249760ea21rt47', '7863a6802ez0e277a0f98534', '14663a3406eb47ffa63d4fec9429cb71', '43bd9bc59d164b5aea498e3ae1c24c3c', 'e929b1d790ab49968ed8e34648553df4']\n  }, {\n    id: 'c5d7498bbcb84d81fc72168871ac6a6e',\n    title: 'Matx Angular',\n    list: [{\n      id: shortId.generate(),\n      title: 'Drag and Drop',\n      cardList: [{\n        id: shortId.generate(),\n        title: 'Beautiful DnD',\n        coverImage: '/assets/images/sq-9.jpg',\n        members: ['323sa680b3249760ea21rt47', '7863a6802ez0e277a0f98534', '14663a3406eb47ffa63d4fec9429cb71', '43bd9bc59d164b5aea498e3ae1c24c3c', 'e929b1d790ab49968ed8e34648553df4'],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever s\",\n        attachments: [{\n          name: 'sky-life.jpg',\n          size: '1.2 MB',\n          url: '/assets/images/sq-11.jpg'\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: 'e929b1d790ab49968ed8e34648553df4',\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }, {\n        id: shortId.generate(),\n        title: 'Nested DnD',\n        coverImage: '/assets/images/sq-11.jpg',\n        members: ['323sa680b3249760ea21rt47', '7863a6802ez0e277a0f98534', '14663a3406eb47ffa63d4fec9429cb71', '43bd9bc59d164b5aea498e3ae1c24c3c', 'e929b1d790ab49968ed8e34648553df4'],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever s\",\n        attachments: [{\n          name: 'sky-life.jpg',\n          size: '1.2 MB',\n          url: '/assets/images/sq-9.jpg'\n        }, {\n          name: 'stair.jpg',\n          size: '2.8 MB',\n          url: '/assets/images/sq-11.jpg'\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: 'e929b1d790ab49968ed8e34648553df4',\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }]\n    }],\n    members: [// only member id\n    '323sa680b3249760ea21rt47', '7863a6802ez0e277a0f98534', '14663a3406eb47ffa63d4fec9429cb71', '43bd9bc59d164b5aea498e3ae1c24c3c', 'e929b1d790ab49968ed8e34648553df4']\n  }],\n  labels: [{\n    id: 1,\n    title: 'Active',\n    color: 'primary'\n  }, {\n    id: 2,\n    title: 'Complete',\n    color: 'green'\n  }, {\n    id: 3,\n    title: 'Ready',\n    color: 'secondary'\n  }, {\n    id: 4,\n    title: 'High Priority',\n    color: 'error'\n  }],\n  members: [{\n    id: '1',\n    name: 'John Doe',\n    avatar: '/assets/images/face-7.jpg'\n  }, {\n    id: '323sa680b3249760ea21rt47',\n    name: 'Frank Powell',\n    avatar: '/assets/images/faces/13.jpg'\n  }, {\n    id: '7863a6802ez0e277a0f98534',\n    name: 'John Doe',\n    avatar: '/assets/images/face-1.jpg'\n  }, {\n    id: '14663a3406eb47ffa63d4fec9429cb71',\n    name: 'Betty Diaz',\n    avatar: '/assets/images/faces/12.jpg'\n  }, {\n    id: '43bd9bc59d164b5aea498e3ae1c24c3c',\n    name: 'Brian Stephens',\n    avatar: '/assets/images/faces/3.jpg'\n  }, {\n    id: '3fc8e01f3ce649d1caf884fbf4f698e4',\n    name: 'Jacqueline Day',\n    avatar: '/assets/images/faces/16.jpg'\n  }, {\n    id: 'e929b1d790ab49968ed8e34648553df4',\n    name: 'Arthur Mendoza',\n    avatar: '/assets/images/faces/10.jpg'\n  }, {\n    id: 'd6caf04bba614632b5fecf91aebf4564',\n    name: 'Jeremy Lee',\n    avatar: '/assets/images/faces/9.jpg'\n  }, {\n    id: 'be0fb188c8e242f097fafa24632107e4',\n    name: 'Johnny Newman',\n    avatar: '/assets/images/faces/5.jpg'\n  }, {\n    id: 'dea902191b964a68ba5f2d93cff37e13',\n    name: 'Jeffrey Little',\n    avatar: '/assets/images/faces/15.jpg'\n  }, {\n    id: '0bf58f5ccc4543a9f8747350b7bda3c7',\n    name: 'Barbara Romero',\n    avatar: '/assets/images/faces/4.jpg'\n  }, {\n    id: 'c5d7498bbcb84d81fc72168871ac6a6e',\n    name: 'Daniel James',\n    avatar: '/assets/images/faces/2.jpg'\n  }, {\n    id: '97bfbdd9413e46efdaca2010400fe18c',\n    name: 'Alice Sanders',\n    avatar: '/assets/images/faces/17.jpg'\n  }]\n}; // a little function to help us with reordering the result\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n}; // Moves an item from one list to another list.\n// const move = (source, destination, droppableSource, droppableDestination) => {\n//   const sourceClone = Array.from(source);\n//   const destClone = Array.from(destination);\n//   const [removed] = sourceClone.splice(droppableSource.index, 1);\n//   destClone.splice(droppableDestination.index, 0, removed);\n//   const result = {};\n//   result[droppableSource.droppableId] = sourceClone;\n//   result[droppableDestination.droppableId] = destClone;\n//   return result;\n// };\n\n\nconst getBoardWithMemberDetails = board => {\n  const members = board.members.map(id => {\n    return ScrumBoardDB.members.find(member => member.id === id);\n  });\n  return { ...board,\n    members\n  };\n};\n\nMock.onGet('/api/scrum-board/all-member').reply(config => {\n  return [200, [...ScrumBoardDB.members]];\n});\nMock.onGet('/api/scrum-board/all-label').reply(config => {\n  return [200, [...ScrumBoardDB.labels]];\n});\nMock.onGet('/api/scrum-board/all-board').reply(config => {\n  const response = ScrumBoardDB.boardList.map(board => _.pick(board, ['id', 'title']));\n  return [200, response];\n});\nMock.onPost('/api/scrum-board/add-board').reply(config => {\n  let title = config.data;\n  ScrumBoardDB.boardList.push({\n    id: shortId.generate(),\n    title,\n    list: [],\n    members: []\n  });\n  const response = ScrumBoardDB.boardList.map(board => _.pick(board, ['id', 'title']));\n  return [200, response];\n});\nMock.onGet('/api/scrum-board').reply(config => {\n  const id = config.data;\n  const board = ScrumBoardDB.boardList.find(board => board.id === id);\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n}); // Mock.onGet(\"/api/scrum-board\").reply(config => {\n//   const id = config.data;\n//   const board = ScrumBoardDB.boardList.find(board => board.id === id);\n//   const response = getBoardWithMemberDetails(board);\n//   return [200, response];\n// });\n\nMock.onPost('/api/scrum-board/add-member').reply(config => {\n  let {\n    boardId,\n    memberId\n  } = JSON.parse(config.data);\n  const board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  board.members.push(memberId);\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost('/api/scrum-board/delete-member').reply(config => {\n  let {\n    boardId,\n    memberId\n  } = JSON.parse(config.data);\n  const board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  board.members.splice(board.members.indexOf(memberId), 1);\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost('/api/scrum-board/add-column').reply(config => {\n  let {\n    boardId,\n    listTitle\n  } = JSON.parse(config.data);\n  const board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  board.list.push({\n    id: shortId.generate(),\n    title: listTitle,\n    cardList: []\n  });\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost('/api/scrum-board/rename-column').reply(config => {\n  let {\n    boardId,\n    listTitle,\n    listId\n  } = JSON.parse(config.data);\n  const board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  board.list.map(column => {\n    if (column.id === listId) {\n      column.title = listTitle;\n    }\n\n    return column;\n  });\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost('/api/scrum-board/delete-column').reply(config => {\n  let {\n    boardId,\n    listId\n  } = JSON.parse(config.data);\n  const board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  let deleteIndex = null;\n  board.list.forEach((column, index) => {\n    if (column.id === listId) deleteIndex = index;\n  });\n  board.list.splice(deleteIndex, 1);\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost('/api/scrum-board/add-card').reply(config => {\n  let {\n    boardId,\n    cardTitle,\n    listId\n  } = JSON.parse(config.data);\n  let board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  let column = board.list.find(column => column.id === listId);\n  column.cardList.push({\n    id: shortId.generate(),\n    title: cardTitle,\n    members: [],\n    labels: [],\n    comments: [],\n    attachments: []\n  });\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost('/api/scrum-board/update-card').reply(config => {\n  let {\n    boardId,\n    listId,\n    card\n  } = JSON.parse(config.data);\n  let boardList = ScrumBoardDB.boardList.map(board => {\n    if (board.id === boardId) {\n      return { ...board,\n        list: board.list.map(column => {\n          if (column.id === listId) {\n            return { ...column,\n              cardList: column.cardList.map(item => {\n                if (item.id === card.id) {\n                  return { ...card\n                  };\n                }\n\n                return { ...item\n                };\n              })\n            };\n          }\n\n          return column;\n        })\n      };\n    }\n\n    return board;\n  });\n  ScrumBoardDB.boardList = [...boardList];\n  let board = boardList.find(item => item.id === boardId);\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost('/api/scrum-board/reorder-list').reply(config => {\n  let {\n    boardId,\n    startIndex,\n    endIndex\n  } = JSON.parse(config.data);\n  ScrumBoardDB.boardList = ScrumBoardDB.boardList.map(board => {\n    if (board.id === boardId) {\n      return { ...board,\n        list: reorder(board.list, startIndex, endIndex)\n      };\n    }\n\n    return board;\n  });\n  let board = ScrumBoardDB.boardList.find(item => item.id === boardId);\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost('/api/scrum-board/reorder-card').reply(config => {\n  let {\n    boardId,\n    listId,\n    startIndex,\n    endIndex\n  } = JSON.parse(config.data);\n  ScrumBoardDB.boardList = ScrumBoardDB.boardList.map(board => {\n    if (board.id === boardId) {\n      return { ...board,\n        list: board.list.map(list => {\n          if (list.id === listId) {\n            return { ...list,\n              cardList: reorder(list.cardList, startIndex, endIndex)\n            };\n          }\n\n          return list;\n        })\n      };\n    }\n\n    return board;\n  });\n  let board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost('/api/scrum-board/move-card').reply(config => {\n  let {\n    boardId,\n    sourcelistId,\n    destinationlistId,\n    source,\n    destination\n  } = JSON.parse(config.data);\n  let board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  let [movedItem] = board.list.find(list => list.id === sourcelistId).cardList.splice(source.index, 1);\n  board.list.find(list => list.id === destinationlistId).cardList.splice(destination.index, 0, movedItem);\n  const response = getBoardWithMemberDetails(board);\n  return [200, response];\n});","map":{"version":3,"sources":["/home/harryji/react/matx-react/src/fake-db/db/scrumBoard.js"],"names":["Mock","_","shortId","ScrumBoardDB","boardList","id","title","list","generate","cardList","coverImage","members","labels","description","attachments","name","size","url","comments","uid","text","time","Date","color","avatar","reorder","startIndex","endIndex","result","Array","from","removed","splice","getBoardWithMemberDetails","board","map","find","member","onGet","reply","config","response","pick","onPost","data","push","boardId","memberId","JSON","parse","indexOf","listTitle","listId","column","deleteIndex","forEach","index","cardTitle","card","item","sourcelistId","destinationlistId","source","destination","movedItem"],"mappings":"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","sourcesContent":["import Mock from '../mock'\nimport * as _ from 'lodash'\nimport shortId from 'shortid'\n\n// board => list => cardList\n\nconst ScrumBoardDB = {\n    boardList: [\n        {\n            id: 'c5d7498bbcb84d81fc7454448871ac6a6e',\n            title: 'Matx React',\n            list: [\n                {\n                    id: shortId.generate(),\n                    title: 'Drag and Drop',\n                    cardList: [\n                        {\n                            id: shortId.generate(),\n                            title: 'Beautiful DnD',\n                            coverImage: '/assets/images/sq-9.jpg',\n                            members: [\n                                '323sa680b3249760ea21rt47',\n                                '7863a6802ez0e277a0f98534',\n                                '14663a3406eb47ffa63d4fec9429cb71',\n                                '43bd9bc59d164b5aea498e3ae1c24c3c',\n                                'e929b1d790ab49968ed8e34648553df4',\n                            ],\n                            labels: [2, 3, 4],\n                            description: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                            attachments: [\n                                {\n                                    name: 'sky-life.jpg',\n                                    size: '1.2 MB',\n                                    url: '/assets/images/sq-11.jpg',\n                                },\n                            ],\n                            comments: [\n                                {\n                                    id: shortId.generate(),\n                                    uid: '7863a6802ez0e277a0f98534',\n                                    text: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                                    time: new Date(),\n                                },\n                            ],\n                        },\n                        {\n                            id: shortId.generate(),\n                            title: 'Nested DnD',\n                            coverImage: '/assets/images/sq-11.jpg',\n                            members: [\n                                '323sa680b3249760ea21rt47',\n                                '7863a6802ez0e277a0f98534',\n                                '14663a3406eb47ffa63d4fec9429cb71',\n                                '43bd9bc59d164b5aea498e3ae1c24c3c',\n                                'e929b1d790ab49968ed8e34648553df4',\n                            ],\n                            labels: [2, 3, 4],\n                            description: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                            attachments: [\n                                {\n                                    name: 'sky-life.jpg',\n                                    size: '1.2 MB',\n                                    url: '/assets/images/sq-11.jpg',\n                                },\n                            ],\n                            comments: [\n                                {\n                                    id: shortId.generate(),\n                                    uid: '323sa680b3249760ea21rt47',\n                                    text: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                                    time: new Date(),\n                                },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    id: shortId.generate(),\n                    title: 'Chat App',\n                    cardList: [\n                        {\n                            id: shortId.generate(),\n                            title: 'Beautiful DnD',\n                            coverImage: '/assets/images/sq-11.jpg',\n                            members: [\n                                '323sa680b3249760ea21rt47',\n                                '7863a6802ez0e277a0f98534',\n                                '14663a3406eb47ffa63d4fec9429cb71',\n                                '43bd9bc59d164b5aea498e3ae1c24c3c',\n                                'e929b1d790ab49968ed8e34648553df4',\n                            ],\n                            labels: [2, 3, 4],\n                            description: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                            attachments: [\n                                {\n                                    name: 'sky-life.jpg',\n                                    size: '1.2 MB',\n                                    url: '/assets/images/sq-11.jpg',\n                                },\n                            ],\n                            comments: [\n                                {\n                                    id: shortId.generate(),\n                                    uid: 'e929b1d790ab49968ed8e34648553df4',\n                                    text: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                                    time: new Date(),\n                                },\n                            ],\n                        },\n                        {\n                            id: shortId.generate(),\n                            title: 'Nested DnD',\n                            coverImage: '/assets/images/sq-13.jpg',\n                            members: [\n                                '323sa680b3249760ea21rt47',\n                                '7863a6802ez0e277a0f98534',\n                                '14663a3406eb47ffa63d4fec9429cb71',\n                                '43bd9bc59d164b5aea498e3ae1c24c3c',\n                                'e929b1d790ab49968ed8e34648553df4',\n                            ],\n                            labels: [2, 3, 4],\n                            description: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                            attachments: [\n                                {\n                                    name: 'sky-life.jpg',\n                                    size: '1.2 MB',\n                                    url: '/assets/images/sq-11.jpg',\n                                },\n                            ],\n                            comments: [\n                                {\n                                    id: shortId.generate(),\n                                    uid: 'e929b1d790ab49968ed8e34648553df4',\n                                    text: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                                    time: new Date(),\n                                },\n                            ],\n                        },\n                    ],\n                },\n            ],\n            members: [\n                // only member id\n                '323sa680b3249760ea21rt47',\n                '7863a6802ez0e277a0f98534',\n                '14663a3406eb47ffa63d4fec9429cb71',\n                '43bd9bc59d164b5aea498e3ae1c24c3c',\n                'e929b1d790ab49968ed8e34648553df4',\n            ],\n        },\n        {\n            id: 'c5d7498bbcb84d81fc72168871ac6a6e',\n            title: 'Matx Angular',\n            list: [\n                {\n                    id: shortId.generate(),\n                    title: 'Drag and Drop',\n                    cardList: [\n                        {\n                            id: shortId.generate(),\n                            title: 'Beautiful DnD',\n                            coverImage: '/assets/images/sq-9.jpg',\n                            members: [\n                                '323sa680b3249760ea21rt47',\n                                '7863a6802ez0e277a0f98534',\n                                '14663a3406eb47ffa63d4fec9429cb71',\n                                '43bd9bc59d164b5aea498e3ae1c24c3c',\n                                'e929b1d790ab49968ed8e34648553df4',\n                            ],\n                            labels: [2, 3, 4],\n                            description:\n                                \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever s\",\n                            attachments: [\n                                {\n                                    name: 'sky-life.jpg',\n                                    size: '1.2 MB',\n                                    url: '/assets/images/sq-11.jpg',\n                                },\n                            ],\n                            comments: [\n                                {\n                                    id: shortId.generate(),\n                                    uid: 'e929b1d790ab49968ed8e34648553df4',\n                                    text: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                                    time: new Date(),\n                                },\n                            ],\n                        },\n                        {\n                            id: shortId.generate(),\n                            title: 'Nested DnD',\n                            coverImage: '/assets/images/sq-11.jpg',\n                            members: [\n                                '323sa680b3249760ea21rt47',\n                                '7863a6802ez0e277a0f98534',\n                                '14663a3406eb47ffa63d4fec9429cb71',\n                                '43bd9bc59d164b5aea498e3ae1c24c3c',\n                                'e929b1d790ab49968ed8e34648553df4',\n                            ],\n                            labels: [2, 3, 4],\n                            description:\n                                \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever s\",\n                            attachments: [\n                                {\n                                    name: 'sky-life.jpg',\n                                    size: '1.2 MB',\n                                    url: '/assets/images/sq-9.jpg',\n                                },\n                                {\n                                    name: 'stair.jpg',\n                                    size: '2.8 MB',\n                                    url: '/assets/images/sq-11.jpg',\n                                },\n                            ],\n                            comments: [\n                                {\n                                    id: shortId.generate(),\n                                    uid: 'e929b1d790ab49968ed8e34648553df4',\n                                    text:\n                                        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n                                    time: new Date(),\n                                },\n                            ],\n                        },\n                    ],\n                },\n            ],\n            members: [\n                // only member id\n                '323sa680b3249760ea21rt47',\n                '7863a6802ez0e277a0f98534',\n                '14663a3406eb47ffa63d4fec9429cb71',\n                '43bd9bc59d164b5aea498e3ae1c24c3c',\n                'e929b1d790ab49968ed8e34648553df4',\n            ],\n        },\n    ],\n\n    labels: [\n        {\n            id: 1,\n            title: 'Active',\n            color: 'primary',\n        },\n        {\n            id: 2,\n            title: 'Complete',\n            color: 'green',\n        },\n        {\n            id: 3,\n            title: 'Ready',\n            color: 'secondary',\n        },\n        {\n            id: 4,\n            title: 'High Priority',\n            color: 'error',\n        },\n    ],\n\n    members: [\n        {\n            id: '1',\n            name: 'John Doe',\n            avatar: '/assets/images/face-7.jpg',\n        },\n        {\n            id: '323sa680b3249760ea21rt47',\n            name: 'Frank Powell',\n            avatar: '/assets/images/faces/13.jpg',\n        },\n        {\n            id: '7863a6802ez0e277a0f98534',\n            name: 'John Doe',\n            avatar: '/assets/images/face-1.jpg',\n        },\n        {\n            id: '14663a3406eb47ffa63d4fec9429cb71',\n            name: 'Betty Diaz',\n            avatar: '/assets/images/faces/12.jpg',\n        },\n        {\n            id: '43bd9bc59d164b5aea498e3ae1c24c3c',\n            name: 'Brian Stephens',\n            avatar: '/assets/images/faces/3.jpg',\n        },\n        {\n            id: '3fc8e01f3ce649d1caf884fbf4f698e4',\n            name: 'Jacqueline Day',\n            avatar: '/assets/images/faces/16.jpg',\n        },\n        {\n            id: 'e929b1d790ab49968ed8e34648553df4',\n            name: 'Arthur Mendoza',\n            avatar: '/assets/images/faces/10.jpg',\n        },\n        {\n            id: 'd6caf04bba614632b5fecf91aebf4564',\n            name: 'Jeremy Lee',\n            avatar: '/assets/images/faces/9.jpg',\n        },\n        {\n            id: 'be0fb188c8e242f097fafa24632107e4',\n            name: 'Johnny Newman',\n            avatar: '/assets/images/faces/5.jpg',\n        },\n        {\n            id: 'dea902191b964a68ba5f2d93cff37e13',\n            name: 'Jeffrey Little',\n            avatar: '/assets/images/faces/15.jpg',\n        },\n        {\n            id: '0bf58f5ccc4543a9f8747350b7bda3c7',\n            name: 'Barbara Romero',\n            avatar: '/assets/images/faces/4.jpg',\n        },\n        {\n            id: 'c5d7498bbcb84d81fc72168871ac6a6e',\n            name: 'Daniel James',\n            avatar: '/assets/images/faces/2.jpg',\n        },\n        {\n            id: '97bfbdd9413e46efdaca2010400fe18c',\n            name: 'Alice Sanders',\n            avatar: '/assets/images/faces/17.jpg',\n        },\n    ],\n}\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list)\n    const [removed] = result.splice(startIndex, 1)\n    result.splice(endIndex, 0, removed)\n\n    return result\n}\n\n// Moves an item from one list to another list.\n// const move = (source, destination, droppableSource, droppableDestination) => {\n//   const sourceClone = Array.from(source);\n//   const destClone = Array.from(destination);\n//   const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n//   destClone.splice(droppableDestination.index, 0, removed);\n\n//   const result = {};\n//   result[droppableSource.droppableId] = sourceClone;\n//   result[droppableDestination.droppableId] = destClone;\n\n//   return result;\n// };\n\nconst getBoardWithMemberDetails = (board) => {\n    const members = board.members.map((id) => {\n        return ScrumBoardDB.members.find((member) => member.id === id)\n    })\n    return { ...board, members }\n}\n\nMock.onGet('/api/scrum-board/all-member').reply((config) => {\n    return [200, [...ScrumBoardDB.members]]\n})\n\nMock.onGet('/api/scrum-board/all-label').reply((config) => {\n    return [200, [...ScrumBoardDB.labels]]\n})\n\nMock.onGet('/api/scrum-board/all-board').reply((config) => {\n    const response = ScrumBoardDB.boardList.map((board) =>\n        _.pick(board, ['id', 'title'])\n    )\n\n    return [200, response]\n})\n\nMock.onPost('/api/scrum-board/add-board').reply((config) => {\n    let title = config.data\n    ScrumBoardDB.boardList.push({\n        id: shortId.generate(),\n        title,\n        list: [],\n        members: [],\n    })\n\n    const response = ScrumBoardDB.boardList.map((board) =>\n        _.pick(board, ['id', 'title'])\n    )\n\n    return [200, response]\n})\n\nMock.onGet('/api/scrum-board').reply((config) => {\n    const id = config.data\n\n    const board = ScrumBoardDB.boardList.find((board) => board.id === id)\n\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n\n// Mock.onGet(\"/api/scrum-board\").reply(config => {\n//   const id = config.data;\n\n//   const board = ScrumBoardDB.boardList.find(board => board.id === id);\n\n//   const response = getBoardWithMemberDetails(board);\n\n//   return [200, response];\n// });\n\nMock.onPost('/api/scrum-board/add-member').reply((config) => {\n    let { boardId, memberId } = JSON.parse(config.data)\n    const board = ScrumBoardDB.boardList.find((board) => board.id === boardId)\n\n    board.members.push(memberId)\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n\nMock.onPost('/api/scrum-board/delete-member').reply((config) => {\n    let { boardId, memberId } = JSON.parse(config.data)\n\n    const board = ScrumBoardDB.boardList.find((board) => board.id === boardId)\n    board.members.splice(board.members.indexOf(memberId), 1)\n\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n\nMock.onPost('/api/scrum-board/add-column').reply((config) => {\n    let { boardId, listTitle } = JSON.parse(config.data)\n\n    const board = ScrumBoardDB.boardList.find((board) => board.id === boardId)\n    board.list.push({\n        id: shortId.generate(),\n        title: listTitle,\n        cardList: [],\n    })\n\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n\nMock.onPost('/api/scrum-board/rename-column').reply((config) => {\n    let { boardId, listTitle, listId } = JSON.parse(config.data)\n\n    const board = ScrumBoardDB.boardList.find((board) => board.id === boardId)\n    board.list.map((column) => {\n        if (column.id === listId) {\n            column.title = listTitle\n        }\n        return column\n    })\n\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n\nMock.onPost('/api/scrum-board/delete-column').reply((config) => {\n    let { boardId, listId } = JSON.parse(config.data)\n\n    const board = ScrumBoardDB.boardList.find((board) => board.id === boardId)\n    let deleteIndex = null\n\n    board.list.forEach((column, index) => {\n        if (column.id === listId) deleteIndex = index\n    })\n\n    board.list.splice(deleteIndex, 1)\n\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n\nMock.onPost('/api/scrum-board/add-card').reply((config) => {\n    let { boardId, cardTitle, listId } = JSON.parse(config.data)\n\n    let board = ScrumBoardDB.boardList.find((board) => board.id === boardId)\n    let column = board.list.find((column) => column.id === listId)\n\n    column.cardList.push({\n        id: shortId.generate(),\n        title: cardTitle,\n        members: [],\n        labels: [],\n        comments: [],\n        attachments: [],\n    })\n\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n\nMock.onPost('/api/scrum-board/update-card').reply((config) => {\n    let { boardId, listId, card } = JSON.parse(config.data)\n\n    let boardList = ScrumBoardDB.boardList.map((board) => {\n        if (board.id === boardId) {\n            return {\n                ...board,\n                list: board.list.map((column) => {\n                    if (column.id === listId) {\n                        return {\n                            ...column,\n                            cardList: column.cardList.map((item) => {\n                                if (item.id === card.id) {\n                                    return { ...card }\n                                }\n                                return { ...item }\n                            }),\n                        }\n                    }\n                    return column\n                }),\n            }\n        }\n        return board\n    })\n\n    ScrumBoardDB.boardList = [...boardList]\n\n    let board = boardList.find((item) => item.id === boardId)\n\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n\nMock.onPost('/api/scrum-board/reorder-list').reply((config) => {\n    let { boardId, startIndex, endIndex } = JSON.parse(config.data)\n\n    ScrumBoardDB.boardList = ScrumBoardDB.boardList.map((board) => {\n        if (board.id === boardId) {\n            return {\n                ...board,\n                list: reorder(board.list, startIndex, endIndex),\n            }\n        }\n        return board\n    })\n\n    let board = ScrumBoardDB.boardList.find((item) => item.id === boardId)\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n\nMock.onPost('/api/scrum-board/reorder-card').reply((config) => {\n    let { boardId, listId, startIndex, endIndex } = JSON.parse(config.data)\n\n    ScrumBoardDB.boardList = ScrumBoardDB.boardList.map((board) => {\n        if (board.id === boardId) {\n            return {\n                ...board,\n                list: board.list.map((list) => {\n                    if (list.id === listId) {\n                        return {\n                            ...list,\n                            cardList: reorder(\n                                list.cardList,\n                                startIndex,\n                                endIndex\n                            ),\n                        }\n                    }\n                    return list\n                }),\n            }\n        }\n        return board\n    })\n\n    let board = ScrumBoardDB.boardList.find((board) => board.id === boardId)\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n\nMock.onPost('/api/scrum-board/move-card').reply((config) => {\n    let {\n        boardId,\n        sourcelistId,\n        destinationlistId,\n        source,\n        destination,\n    } = JSON.parse(config.data)\n    let board = ScrumBoardDB.boardList.find((board) => board.id === boardId)\n\n    let [movedItem] = board.list\n        .find((list) => list.id === sourcelistId)\n        .cardList.splice(source.index, 1)\n\n    board.list\n        .find((list) => list.id === destinationlistId)\n        .cardList.splice(destination.index, 0, movedItem)\n\n    const response = getBoardWithMemberDetails(board)\n\n    return [200, response]\n})\n"]},"metadata":{},"sourceType":"module"}