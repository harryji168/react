{"ast":null,"code":"import axios from 'axios';\nexport const GET_ALL_BOARD = 'GET_ALL_BOARD';\nexport const GET_BOARD_BY_ID = 'GET_BOARD_BY_ID';\nexport const ADD_BOARD = 'ADD_BOARD';\nexport const ADD_MEMBER_IN_BOARD = 'ADD_MEMBER_IN_BOARD';\nexport const DELETE_MEMBER_FROM_BOARD = 'DELETE_MEMBER_FROM_BOARD';\nexport const GET_ALL_MEMBERS = 'GET_ALL_MEMBERS';\nexport const GET_ALL_LABELS = 'GET_ALL_LABELS';\nexport const ADD_LIST = 'ADD_LIST';\nexport const RENAME_LIST = 'RENAME_LIST';\nexport const REORDER_LIST = 'REORDER_LIST';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const ADD_CARD = 'ADD_CARD';\nexport const UPDATE_CARD = 'UPDATE_CARD';\nexport const REORDER_CARD = 'REORDER_CARD';\nexport const REORDER_CARD_LIST = 'REORDER_CARD_LIST';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const getAllMembers = () => {\n  return dispatch => {\n    axios.get('/api/scrum-board/all-member').then(res => {\n      dispatch({\n        type: GET_ALL_MEMBERS,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const getAllLabels = () => {\n  return dispatch => {\n    axios.get('/api/scrum-board/all-label').then(res => {\n      dispatch({\n        type: GET_ALL_LABELS,\n        payload: res.data\n      });\n    });\n  };\n}; // BOARD RELATED ACTIONS\n\nexport const getAllBoard = () => {\n  return dispatch => {\n    axios.get('/api/scrum-board/all-board').then(res => {\n      dispatch({\n        type: GET_ALL_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addNewBoard = boardTitle => {\n  return dispatch => {\n    axios.post('/api/scrum-board/add-board', boardTitle).then(res => {\n      dispatch({\n        type: ADD_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const getBoardById = id => {\n  return dispatch => {\n    axios.get('/api/scrum-board', {\n      data: id\n    }).then(res => {\n      dispatch({\n        type: GET_BOARD_BY_ID,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addMemberInBoard = _ref => {\n  let {\n    boardId,\n    memberId\n  } = _ref;\n  return dispatch => {\n    axios.post('/api/scrum-board/add-member', {\n      boardId,\n      memberId\n    }).then(res => {\n      dispatch({\n        type: ADD_MEMBER_IN_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const deleteMemberFromBoard = _ref2 => {\n  let {\n    boardId,\n    memberId\n  } = _ref2;\n  return dispatch => {\n    axios.post('/api/scrum-board/delete-member', {\n      boardId,\n      memberId\n    }).then(res => {\n      dispatch({\n        type: DELETE_MEMBER_FROM_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addListInBoard = _ref3 => {\n  let {\n    boardId,\n    listTitle\n  } = _ref3;\n  return dispatch => {\n    axios.post('/api/scrum-board/add-column', {\n      boardId,\n      listTitle\n    }).then(res => {\n      dispatch({\n        type: ADD_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const renameListInBoard = _ref4 => {\n  let {\n    boardId,\n    listTitle,\n    listId\n  } = _ref4;\n  return dispatch => {\n    axios.post('/api/scrum-board/rename-column', {\n      boardId,\n      listTitle,\n      listId\n    }).then(res => {\n      dispatch({\n        type: RENAME_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const reorderList = (boardId, startIndex, endIndex) => {\n  return dispatch => {\n    axios.post('/api/scrum-board/reorder-list', {\n      boardId,\n      startIndex,\n      endIndex\n    }).then(res => {\n      dispatch({\n        type: REORDER_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const deleteListFromBoard = _ref5 => {\n  let {\n    boardId,\n    listId\n  } = _ref5;\n  return dispatch => {\n    axios.post('/api/scrum-board/delete-column', {\n      boardId,\n      listId\n    }).then(res => {\n      dispatch({\n        type: DELETE_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const addNewCardInList = _ref6 => {\n  let {\n    listId,\n    boardId,\n    cardTitle\n  } = _ref6;\n  return dispatch => {\n    axios.post('/api/scrum-board/add-card', {\n      listId,\n      boardId,\n      cardTitle\n    }).then(res => {\n      dispatch({\n        type: ADD_CARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const reorderCardInList = (boardId, listId, startIndex, endIndex) => {\n  return dispatch => {\n    axios.post('/api/scrum-board/reorder-card', {\n      boardId,\n      listId,\n      startIndex,\n      endIndex\n    }).then(res => {\n      dispatch({\n        type: REORDER_CARD_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const moveCardInList = (boardId, sourcelistId, destinationlistId, source, destination) => {\n  return dispatch => {\n    axios.post('/api/scrum-board/move-card', {\n      boardId,\n      sourcelistId,\n      destinationlistId,\n      source,\n      destination\n    }).then(res => {\n      dispatch({\n        type: MOVE_CARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport const updateCardInList = (boardId, listId, card) => {\n  return dispatch => {\n    axios.post('/api/scrum-board/update-card', {\n      boardId,\n      listId,\n      card\n    }).then(res => {\n      dispatch({\n        type: UPDATE_CARD,\n        payload: res.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/harryji/react/matx-react/src/app/redux/actions/ScrumBoardActions.js"],"names":["axios","GET_ALL_BOARD","GET_BOARD_BY_ID","ADD_BOARD","ADD_MEMBER_IN_BOARD","DELETE_MEMBER_FROM_BOARD","GET_ALL_MEMBERS","GET_ALL_LABELS","ADD_LIST","RENAME_LIST","REORDER_LIST","DELETE_LIST","ADD_CARD","UPDATE_CARD","REORDER_CARD","REORDER_CARD_LIST","MOVE_CARD","DELETE_CARD","getAllMembers","dispatch","get","then","res","type","payload","data","getAllLabels","getAllBoard","addNewBoard","boardTitle","post","getBoardById","id","addMemberInBoard","boardId","memberId","deleteMemberFromBoard","addListInBoard","listTitle","renameListInBoard","listId","reorderList","startIndex","endIndex","deleteListFromBoard","addNewCardInList","cardTitle","reorderCardInList","moveCardInList","sourcelistId","destinationlistId","source","destination","updateCardInList","card"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const GET_ALL_BOARD = 'GET_ALL_BOARD'\nexport const GET_BOARD_BY_ID = 'GET_BOARD_BY_ID'\nexport const ADD_BOARD = 'ADD_BOARD'\nexport const ADD_MEMBER_IN_BOARD = 'ADD_MEMBER_IN_BOARD'\nexport const DELETE_MEMBER_FROM_BOARD = 'DELETE_MEMBER_FROM_BOARD'\nexport const GET_ALL_MEMBERS = 'GET_ALL_MEMBERS'\nexport const GET_ALL_LABELS = 'GET_ALL_LABELS'\n\nexport const ADD_LIST = 'ADD_LIST'\nexport const RENAME_LIST = 'RENAME_LIST'\nexport const REORDER_LIST = 'REORDER_LIST'\nexport const DELETE_LIST = 'DELETE_LIST'\n\nexport const ADD_CARD = 'ADD_CARD'\nexport const UPDATE_CARD = 'UPDATE_CARD'\nexport const REORDER_CARD = 'REORDER_CARD'\nexport const REORDER_CARD_LIST = 'REORDER_CARD_LIST'\nexport const MOVE_CARD = 'MOVE_CARD'\nexport const DELETE_CARD = 'DELETE_CARD'\n\nexport const getAllMembers = () => {\n    return (dispatch) => {\n        axios.get('/api/scrum-board/all-member').then((res) => {\n            dispatch({\n                type: GET_ALL_MEMBERS,\n                payload: res.data,\n            })\n        })\n    }\n}\n\nexport const getAllLabels = () => {\n    return (dispatch) => {\n        axios.get('/api/scrum-board/all-label').then((res) => {\n            dispatch({\n                type: GET_ALL_LABELS,\n                payload: res.data,\n            })\n        })\n    }\n}\n\n// BOARD RELATED ACTIONS\nexport const getAllBoard = () => {\n    return (dispatch) => {\n        axios.get('/api/scrum-board/all-board').then((res) => {\n            dispatch({\n                type: GET_ALL_BOARD,\n                payload: res.data,\n            })\n        })\n    }\n}\n\nexport const addNewBoard = (boardTitle) => {\n    return (dispatch) => {\n        axios.post('/api/scrum-board/add-board', boardTitle).then((res) => {\n            dispatch({\n                type: ADD_BOARD,\n                payload: res.data,\n            })\n        })\n    }\n}\n\nexport const getBoardById = (id) => {\n    return (dispatch) => {\n        axios.get('/api/scrum-board', { data: id }).then((res) => {\n            dispatch({\n                type: GET_BOARD_BY_ID,\n                payload: res.data,\n            })\n        })\n    }\n}\n\nexport const addMemberInBoard = ({ boardId, memberId }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/add-member', { boardId, memberId })\n            .then((res) => {\n                dispatch({\n                    type: ADD_MEMBER_IN_BOARD,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const deleteMemberFromBoard = ({ boardId, memberId }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/delete-member', { boardId, memberId })\n            .then((res) => {\n                dispatch({\n                    type: DELETE_MEMBER_FROM_BOARD,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const addListInBoard = ({ boardId, listTitle }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/add-column', { boardId, listTitle })\n            .then((res) => {\n                dispatch({\n                    type: ADD_LIST,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const renameListInBoard = ({ boardId, listTitle, listId }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/rename-column', {\n                boardId,\n                listTitle,\n                listId,\n            })\n            .then((res) => {\n                dispatch({\n                    type: RENAME_LIST,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const reorderList = (boardId, startIndex, endIndex) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/reorder-list', {\n                boardId,\n                startIndex,\n                endIndex,\n            })\n            .then((res) => {\n                dispatch({\n                    type: REORDER_LIST,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const deleteListFromBoard = ({ boardId, listId }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/delete-column', { boardId, listId })\n            .then((res) => {\n                dispatch({\n                    type: DELETE_LIST,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const addNewCardInList = ({ listId, boardId, cardTitle }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/add-card', { listId, boardId, cardTitle })\n            .then((res) => {\n                dispatch({\n                    type: ADD_CARD,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const reorderCardInList = (boardId, listId, startIndex, endIndex) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/reorder-card', {\n                boardId,\n                listId,\n                startIndex,\n                endIndex,\n            })\n            .then((res) => {\n                dispatch({\n                    type: REORDER_CARD_LIST,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const moveCardInList = (\n    boardId,\n    sourcelistId,\n    destinationlistId,\n    source,\n    destination\n) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/move-card', {\n                boardId,\n                sourcelistId,\n                destinationlistId,\n                source,\n                destination,\n            })\n            .then((res) => {\n                dispatch({\n                    type: MOVE_CARD,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const updateCardInList = (boardId, listId, card) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/update-card', { boardId, listId, card })\n            .then((res) => {\n                dispatch({\n                    type: UPDATE_CARD,\n                    payload: res.data,\n                })\n            })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}