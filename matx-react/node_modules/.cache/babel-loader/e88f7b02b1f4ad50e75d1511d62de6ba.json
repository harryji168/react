{"ast":null,"code":"var _jsxFileName = \"/home/harryji/react/matx-react/src/app/views/material-kit/auto-complete/AsyncAutocomplete.jsx\";\n// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport { TextField, CircularProgress } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction sleep() {\n  let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function AsyncAutocomplete() {\n  const [open, setOpen] = React.useState(false);\n  const [options, setOptions] = React.useState([]);\n  const loading = open && options.length === 0;\n  React.useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    ;\n\n    (async () => {\n      const response = await fetch('https://country.register.gov.uk/records.json?page-size=5000');\n      await sleep(1e3); // For demo purposes.\n\n      const countries = await response.json();\n\n      if (active) {\n        setOptions(Object.keys(countries).map(key => countries[key].item[0]));\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"asynchronous-demo\",\n    className: \"w-300\",\n    open: open,\n    onOpen: () => {\n      setOpen(true);\n    },\n    onClose: () => {\n      setOpen(false);\n    },\n    getOptionSelected: (option, value) => option.name === value.name,\n    getOptionLabel: option => option.name,\n    options: options,\n    loading: loading,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Asynchronous\",\n      fullWidth: true,\n      variant: \"outlined\",\n      InputProps: { ...params.InputProps,\n        endAdornment: /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }\n        }, loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n          color: \"inherit\",\n          size: 20,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 37\n          }\n        }) : null, params.InputProps.endAdornment)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/harryji/react/matx-react/src/app/views/material-kit/auto-complete/AsyncAutocomplete.jsx"],"names":["fetch","React","TextField","CircularProgress","Autocomplete","sleep","delay","Promise","resolve","setTimeout","AsyncAutocomplete","open","setOpen","useState","options","setOptions","loading","length","useEffect","active","undefined","response","countries","json","Object","keys","map","key","item","option","value","name","params","InputProps","endAdornment"],"mappings":"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","sourcesContent":["// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport fetch from 'cross-fetch'\nimport React from 'react'\nimport { TextField, CircularProgress } from '@material-ui/core'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\nfunction sleep(delay = 0) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, delay)\n    })\n}\n\nexport default function AsyncAutocomplete() {\n    const [open, setOpen] = React.useState(false)\n    const [options, setOptions] = React.useState([])\n    const loading = open && options.length === 0\n\n    React.useEffect(() => {\n        let active = true\n\n        if (!loading) {\n            return undefined\n        }\n\n        ;(async () => {\n            const response = await fetch(\n                'https://country.register.gov.uk/records.json?page-size=5000'\n            )\n            await sleep(1e3) // For demo purposes.\n            const countries = await response.json()\n\n            if (active) {\n                setOptions(\n                    Object.keys(countries).map((key) => countries[key].item[0])\n                )\n            }\n        })()\n\n        return () => {\n            active = false\n        }\n    }, [loading])\n\n    React.useEffect(() => {\n        if (!open) {\n            setOptions([])\n        }\n    }, [open])\n\n    return (\n        <Autocomplete\n            id=\"asynchronous-demo\"\n            className=\"w-300\"\n            open={open}\n            onOpen={() => {\n                setOpen(true)\n            }}\n            onClose={() => {\n                setOpen(false)\n            }}\n            getOptionSelected={(option, value) => option.name === value.name}\n            getOptionLabel={(option) => option.name}\n            options={options}\n            loading={loading}\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    label=\"Asynchronous\"\n                    fullWidth\n                    variant=\"outlined\"\n                    InputProps={{\n                        ...params.InputProps,\n                        endAdornment: (\n                            <React.Fragment>\n                                {loading ? (\n                                    <CircularProgress\n                                        color=\"inherit\"\n                                        size={20}\n                                    />\n                                ) : null}\n                                {params.InputProps.endAdornment}\n                            </React.Fragment>\n                        ),\n                    }}\n                />\n            )}\n        />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}