{"ast":null,"code":"var _jsxFileName = \"/home/harryji/react/matx-react/src/app/components/MatxTheme/MatxCssVars.jsx\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/styles';\n\nconst generateFontProperty = fontObject => {\n  return \"\".concat(fontObject.fontWeight, \" \").concat(fontObject.fontSize, \"/\").concat(fontObject.lineHeight, \" \").concat(fontObject.fontFamily);\n};\n\nconst generateShadowVars = theme => {\n  return theme.shadows.reduce(function (result, item, index, array) {\n    result[\"--elevation-z\".concat(index)] = item;\n    return result;\n  }, {});\n};\n\nconst styles = theme => ({\n  '@global': {\n    ':root': { ...{\n        '--primary': theme.palette.primary.main,\n        '--secondary': theme.palette.secondary.main,\n        '--error': theme.palette.error.main,\n        '--bg-default': theme.palette.background.default,\n        '--bg-paper': theme.palette.background.paper,\n        '--text-body': theme.palette.text.primary,\n        '--text-muted': theme.palette.text.secondary,\n        '--text-disabled': theme.palette.text.disabled,\n        '--text-hint': theme.palette.text.hint,\n        '--font': theme.typography.fontFamily,\n        '--font-caption': generateFontProperty(theme.typography.caption),\n        '--font-h1': generateFontProperty(theme.typography.h1),\n        '--font-h2': generateFontProperty(theme.typography.h2),\n        '--font-h3': generateFontProperty(theme.typography.h3),\n        '--font-h4': generateFontProperty(theme.typography.h4),\n        '--font-h5': generateFontProperty(theme.typography.h5),\n        '--font-h6': generateFontProperty(theme.typography.h6),\n        '--font-overline': generateFontProperty(theme.typography.overline),\n        '--font-body-1': generateFontProperty(theme.typography.body1),\n        '--font-body-2': generateFontProperty(theme.typography.body2),\n        '--font-subtitle-1': generateFontProperty(theme.typography.subtitle1),\n        '--font-subtitle-2': generateFontProperty(theme.typography.subtitle2),\n        '--font-button': generateFontProperty(theme.typography.button),\n        '--font-headline': '400 24px/32px var(--font)',\n        '--font-title': '500 18px/26px var(--font)',\n        '--font-display-1': '400 34px/40px var(--font)',\n        '--font-display-2': '400 45px/48px var(--font)',\n        '--font-display-3': '400 56px/56px var(--font)',\n        '--font-display-4': '300 112px/112px var(--font)'\n      },\n      ...generateShadowVars(theme)\n    }\n  }\n});\n\nconst MatxCssVars = _ref => {\n  let {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }\n  }, children);\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(MatxCssVars);","map":{"version":3,"sources":["/home/harryji/react/matx-react/src/app/components/MatxTheme/MatxCssVars.jsx"],"names":["React","withStyles","generateFontProperty","fontObject","fontWeight","fontSize","lineHeight","fontFamily","generateShadowVars","theme","shadows","reduce","result","item","index","array","styles","palette","primary","main","secondary","error","background","default","paper","text","disabled","hint","typography","caption","h1","h2","h3","h4","h5","h6","overline","body1","body2","subtitle1","subtitle2","button","MatxCssVars","children","withTheme"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withStyles } from '@material-ui/styles'\n\nconst generateFontProperty = (fontObject) => {\n    return `${fontObject.fontWeight} ${fontObject.fontSize}/${fontObject.lineHeight} ${fontObject.fontFamily}`\n}\n\nconst generateShadowVars = (theme) => {\n    return theme.shadows.reduce(function (result, item, index, array) {\n        result[`--elevation-z${index}`] = item\n        return result\n    }, {})\n}\n\nconst styles = (theme) => ({\n    '@global': {\n        ':root': {\n            ...{\n                '--primary': theme.palette.primary.main,\n                '--secondary': theme.palette.secondary.main,\n                '--error': theme.palette.error.main,\n                '--bg-default': theme.palette.background.default,\n                '--bg-paper': theme.palette.background.paper,\n                '--text-body': theme.palette.text.primary,\n                '--text-muted': theme.palette.text.secondary,\n                '--text-disabled': theme.palette.text.disabled,\n                '--text-hint': theme.palette.text.hint,\n                '--font': theme.typography.fontFamily,\n                '--font-caption': generateFontProperty(\n                    theme.typography.caption\n                ),\n                '--font-h1': generateFontProperty(theme.typography.h1),\n                '--font-h2': generateFontProperty(theme.typography.h2),\n                '--font-h3': generateFontProperty(theme.typography.h3),\n                '--font-h4': generateFontProperty(theme.typography.h4),\n                '--font-h5': generateFontProperty(theme.typography.h5),\n                '--font-h6': generateFontProperty(theme.typography.h6),\n                '--font-overline': generateFontProperty(\n                    theme.typography.overline\n                ),\n                '--font-body-1': generateFontProperty(theme.typography.body1),\n                '--font-body-2': generateFontProperty(theme.typography.body2),\n                '--font-subtitle-1': generateFontProperty(\n                    theme.typography.subtitle1\n                ),\n                '--font-subtitle-2': generateFontProperty(\n                    theme.typography.subtitle2\n                ),\n                '--font-button': generateFontProperty(theme.typography.button),\n                '--font-headline': '400 24px/32px var(--font)',\n                '--font-title': '500 18px/26px var(--font)',\n                '--font-display-1': '400 34px/40px var(--font)',\n                '--font-display-2': '400 45px/48px var(--font)',\n                '--font-display-3': '400 56px/56px var(--font)',\n                '--font-display-4': '300 112px/112px var(--font)',\n            },\n            ...generateShadowVars(theme),\n        },\n    },\n})\n\nconst MatxCssVars = ({ children }) => {\n    return <React.Fragment>{children}</React.Fragment>\n}\n\nexport default withStyles(styles, { withTheme: true })(MatxCssVars)\n"]},"metadata":{},"sourceType":"module"}