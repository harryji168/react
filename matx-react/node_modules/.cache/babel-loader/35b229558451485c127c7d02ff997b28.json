{"ast":null,"code":"var _jsxFileName = \"/home/harryji/react/matx-react/src/app/views/forms/UploadForm.jsx\";\nimport React, { useState } from 'react';\nimport { Breadcrumb, SimpleCard, MatxProgressBar } from 'app/components';\nimport { Fab, Icon, Card, Grid, Divider, Button } from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst UploadForm = () => {\n  const [files, setFiles] = useState([]);\n  const [queProgress, setQueProgress] = useState(0);\n  const [dargClass, setDragClass] = useState('');\n\n  const handleFileSelect = event => {\n    let files = event.target.files;\n    let list = [];\n\n    for (const iterator of files) {\n      list.push({\n        file: iterator,\n        uploading: false,\n        error: false,\n        progress: 0\n      });\n    }\n\n    setFiles(list);\n  };\n\n  const handleDragOver = event => {\n    event.preventDefault();\n    setDragClass('drag-shadow');\n  };\n\n  const handleDrop = event => {\n    event.preventDefault();\n    event.persist();\n    let files = event.dataTransfer.files;\n    let list = [];\n\n    for (const iterator of files) {\n      list.push({\n        file: iterator,\n        uploading: false,\n        error: false,\n        progress: 0\n      });\n    }\n\n    setDragClass('');\n    setFiles(list);\n    return false;\n  };\n\n  const handleDragStart = event => {\n    setDragClass('drag-shadow');\n  };\n\n  const handleSingleRemove = index => {\n    let tempList = [...files];\n    tempList.splice(index, 1);\n    setFiles([...tempList]);\n  };\n\n  const handleAllRemove = () => {\n    setFiles([]);\n    setQueProgress(0);\n  };\n\n  const uploadSingleFile = index => {\n    let allFiles = [...files];\n    let file = files[index];\n    allFiles[index] = { ...file,\n      uploading: true,\n      error: false\n    };\n    setFiles([...allFiles]);\n  };\n\n  const uploadAllFile = () => {\n    let allFiles = [];\n    files.map(item => {\n      allFiles.push({ ...item,\n        uploading: true,\n        error: false\n      });\n      return item;\n    });\n    setFiles([...allFiles]);\n    setQueProgress(35);\n  };\n\n  const handleSingleCancel = index => {\n    let allFiles = [...files];\n    let file = files[index];\n    allFiles[index] = { ...file,\n      uploading: false,\n      error: true\n    };\n    setFiles([...allFiles]);\n  };\n\n  const handleCancelAll = () => {\n    let allFiles = [];\n    files.map(item => {\n      allFiles.push({ ...item,\n        uploading: false,\n        error: true\n      });\n      return item;\n    });\n    setFiles([...allFiles]);\n    setQueProgress(0);\n  };\n\n  let isEmpty = !!!files.length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-form m-sm-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-sm-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    routeSegments: [{\n      name: 'Others',\n      path: '/'\n    }, {\n      name: 'Upload'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"File Upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-single-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: \"capitalize\",\n    color: \"primary\",\n    component: \"span\",\n    variant: \"extended\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"pr-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, \"Single File\")))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"hidden\",\n    onChange: handleFileSelect,\n    id: \"upload-single-file\",\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-multiple-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: \"capitalize\",\n    color: \"primary\",\n    component: \"span\",\n    variant: \"extended\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"pr-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, \"Multiple File\")))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"hidden\",\n    onChange: handleFileSelect,\n    id: \"upload-multiple-file\",\n    type: \"file\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx('h-200 w-full border-radius-4 bg-light-gray mb-6 flex justify-center items-center', dargClass),\n    onDragEnter: handleDragStart,\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, isEmpty ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, \"Drop your files here\") : /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, files.length, \" file\", files.length > 1 ? 's' : '', ' ', \"selected...\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-6\",\n    elevation: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 1,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 2,\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }, \"Progress\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 1,\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }), isEmpty && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, \"Que is empty\"), files.map((item, index) => {\n    let {\n      file,\n      uploading,\n      error,\n      progress\n    } = item;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-4 py-4\",\n      key: file.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      justify: \"center\",\n      alignItems: \"center\",\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 37\n      }\n    }, file.name), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 37\n      }\n    }, (file.size / 1024 / 1024).toFixed(1), ' ', \"MB\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 2,\n      md: 2,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MatxProgressBar, {\n      value: progress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 37\n      }\n    }, error && /*#__PURE__*/React.createElement(Icon, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 45\n      }\n    }, \"error\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: uploading,\n      onClick: () => uploadSingleFile(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 45\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"mx-2\",\n      size: \"small\",\n      variant: \"contained\",\n      disabled: !uploading,\n      color: \"secondary\",\n      onClick: () => handleSingleCancel(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 45\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: \"bg-error\",\n      onClick: () => handleSingleRemove(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 45\n      }\n    }, \"Remove\")))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, \"Queue progress:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MatxProgressBar, {\n    value: queProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: isEmpty,\n    onClick: uploadAllFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, \"Upload All\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"mx-2\",\n    variant: \"contained\",\n    color: \"secondary\",\n    disabled: isEmpty,\n    onClick: handleCancelAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }, \"Cancel All\"), !isEmpty && /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    className: \"bg-error\",\n    onClick: handleAllRemove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 29\n    }\n  }, \"Remove All\")))));\n};\n\nexport default UploadForm;","map":{"version":3,"sources":["/home/harryji/react/matx-react/src/app/views/forms/UploadForm.jsx"],"names":["React","useState","Breadcrumb","SimpleCard","MatxProgressBar","Fab","Icon","Card","Grid","Divider","Button","clsx","UploadForm","files","setFiles","queProgress","setQueProgress","dargClass","setDragClass","handleFileSelect","event","target","list","iterator","push","file","uploading","error","progress","handleDragOver","preventDefault","handleDrop","persist","dataTransfer","handleDragStart","handleSingleRemove","index","tempList","splice","handleAllRemove","uploadSingleFile","allFiles","uploadAllFile","map","item","handleSingleCancel","handleCancelAll","isEmpty","length","name","path","size","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Breadcrumb, SimpleCard, MatxProgressBar } from 'app/components'\nimport { Fab, Icon, Card, Grid, Divider, Button } from '@material-ui/core'\nimport clsx from 'clsx'\n\nconst UploadForm = () => {\n    const [files, setFiles] = useState([])\n    const [queProgress, setQueProgress] = useState(0)\n    const [dargClass, setDragClass] = useState('')\n\n    const handleFileSelect = (event) => {\n        let files = event.target.files\n        let list = []\n\n        for (const iterator of files) {\n            list.push({\n                file: iterator,\n                uploading: false,\n                error: false,\n                progress: 0,\n            })\n        }\n        setFiles(list)\n    }\n\n    const handleDragOver = (event) => {\n        event.preventDefault()\n        setDragClass('drag-shadow')\n    }\n\n    const handleDrop = (event) => {\n        event.preventDefault()\n        event.persist()\n\n        let files = event.dataTransfer.files\n        let list = []\n\n        for (const iterator of files) {\n            list.push({\n                file: iterator,\n                uploading: false,\n                error: false,\n                progress: 0,\n            })\n        }\n\n        setDragClass('')\n        setFiles(list)\n\n        return false\n    }\n\n    const handleDragStart = (event) => {\n        setDragClass('drag-shadow')\n    }\n\n    const handleSingleRemove = (index) => {\n        let tempList = [...files]\n        tempList.splice(index, 1)\n        setFiles([...tempList])\n    }\n\n    const handleAllRemove = () => {\n        setFiles([])\n        setQueProgress(0)\n    }\n\n    const uploadSingleFile = (index) => {\n        let allFiles = [...files]\n        let file = files[index]\n\n        allFiles[index] = { ...file, uploading: true, error: false }\n\n        setFiles([...allFiles])\n    }\n\n    const uploadAllFile = () => {\n        let allFiles = []\n\n        files.map((item) => {\n            allFiles.push({\n                ...item,\n                uploading: true,\n                error: false,\n            })\n\n            return item\n        })\n\n        setFiles([...allFiles])\n        setQueProgress(35)\n    }\n\n    const handleSingleCancel = (index) => {\n        let allFiles = [...files]\n        let file = files[index]\n\n        allFiles[index] = { ...file, uploading: false, error: true }\n\n        setFiles([...allFiles])\n    }\n\n    const handleCancelAll = () => {\n        let allFiles = []\n\n        files.map((item) => {\n            allFiles.push({\n                ...item,\n                uploading: false,\n                error: true,\n            })\n\n            return item\n        })\n\n        setFiles([...allFiles])\n        setQueProgress(0)\n    }\n\n    let isEmpty = !!!files.length\n\n    return (\n        <div className=\"upload-form m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Others', path: '/' },\n                        { name: 'Upload' },\n                    ]}\n                />\n            </div>\n            <SimpleCard title=\"File Upload\">\n                <div className=\"flex flex-wrap mb-6\">\n                    <label htmlFor=\"upload-single-file\">\n                        <Fab\n                            className=\"capitalize\"\n                            color=\"primary\"\n                            component=\"span\"\n                            variant=\"extended\"\n                        >\n                            <div className=\"flex items-center\">\n                                <Icon className=\"pr-8\">cloud_upload</Icon>\n                                <span>Single File</span>\n                            </div>\n                        </Fab>\n                    </label>\n                    <input\n                        className=\"hidden\"\n                        onChange={handleFileSelect}\n                        id=\"upload-single-file\"\n                        type=\"file\"\n                    />\n                    <div className=\"px-4\"></div>\n                    <label htmlFor=\"upload-multiple-file\">\n                        <Fab\n                            className=\"capitalize\"\n                            color=\"primary\"\n                            component=\"span\"\n                            variant=\"extended\"\n                        >\n                            <div className=\"flex items-center\">\n                                <Icon className=\"pr-8\">cloud_upload</Icon>\n                                <span>Multiple File</span>\n                            </div>\n                        </Fab>\n                    </label>\n                    <input\n                        className=\"hidden\"\n                        onChange={handleFileSelect}\n                        id=\"upload-multiple-file\"\n                        type=\"file\"\n                        multiple\n                    />\n                </div>\n\n                <div\n                    className={clsx(\n                        'h-200 w-full border-radius-4 bg-light-gray mb-6 flex justify-center items-center',\n                        dargClass\n                    )}\n                    onDragEnter={handleDragStart}\n                    onDragOver={handleDragOver}\n                    onDrop={handleDrop}\n                >\n                    {isEmpty ? (\n                        <span>Drop your files here</span>\n                    ) : (\n                        <h5 className=\"m-0\">\n                            {files.length} file{files.length > 1 ? 's' : ''}{' '}\n                            selected...\n                        </h5>\n                    )}\n                </div>\n\n                <Card className=\"mb-6\" elevation={2}>\n                    <div className=\"p-4\">\n                        <Grid\n                            container\n                            spacing={2}\n                            justify=\"center\"\n                            alignItems=\"center\"\n                            direction=\"row\"\n                        >\n                            <Grid item lg={4} md={4}>\n                                Name\n                            </Grid>\n                            <Grid item lg={1} md={1}>\n                                Size\n                            </Grid>\n                            <Grid item lg={2} md={2}>\n                                Progress\n                            </Grid>\n                            <Grid item lg={1} md={1}>\n                                Status\n                            </Grid>\n                            <Grid item lg={4} md={4}>\n                                Actions\n                            </Grid>\n                        </Grid>\n                    </div>\n                    <Divider></Divider>\n\n                    {isEmpty && <p className=\"px-4\">Que is empty</p>}\n\n                    {files.map((item, index) => {\n                        let { file, uploading, error, progress } = item\n                        return (\n                            <div className=\"px-4 py-4\" key={file.name}>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    direction=\"row\"\n                                >\n                                    <Grid item lg={4} md={4} sm={12} xs={12}>\n                                        {file.name}\n                                    </Grid>\n                                    <Grid item lg={1} md={1} sm={12} xs={12}>\n                                        {(file.size / 1024 / 1024).toFixed(1)}{' '}\n                                        MB\n                                    </Grid>\n                                    <Grid item lg={2} md={2} sm={12} xs={12}>\n                                        <MatxProgressBar\n                                            value={progress}\n                                        ></MatxProgressBar>\n                                    </Grid>\n                                    <Grid item lg={1} md={1} sm={12} xs={12}>\n                                        {error && (\n                                            <Icon color=\"error\">error</Icon>\n                                        )}\n                                        {/* {uploading && <Icon className=\"text-green\">done</Icon>} */}\n                                    </Grid>\n                                    <Grid item lg={4} md={4} sm={12} xs={12}>\n                                        <div>\n                                            <Button\n                                                size=\"small\"\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                disabled={uploading}\n                                                onClick={() =>\n                                                    uploadSingleFile(index)\n                                                }\n                                            >\n                                                Upload\n                                            </Button>\n                                            <Button\n                                                className=\"mx-2\"\n                                                size=\"small\"\n                                                variant=\"contained\"\n                                                disabled={!uploading}\n                                                color=\"secondary\"\n                                                onClick={() =>\n                                                    handleSingleCancel(index)\n                                                }\n                                            >\n                                                Cancel\n                                            </Button>\n                                            <Button\n                                                variant=\"contained\"\n                                                size=\"small\"\n                                                className=\"bg-error\"\n                                                onClick={() =>\n                                                    handleSingleRemove(index)\n                                                }\n                                            >\n                                                Remove\n                                            </Button>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )\n                    })}\n                </Card>\n\n                <div>\n                    <p className=\"m-0\">Queue progress:</p>\n                    <div className=\"py-4\">\n                        <MatxProgressBar value={queProgress}></MatxProgressBar>\n                    </div>\n                    <div className=\"flex\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={isEmpty}\n                            onClick={uploadAllFile}\n                        >\n                            Upload All\n                        </Button>\n                        <Button\n                            className=\"mx-2\"\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={isEmpty}\n                            onClick={handleCancelAll}\n                        >\n                            Cancel All\n                        </Button>\n                        {!isEmpty && (\n                            <Button\n                                variant=\"contained\"\n                                className=\"bg-error\"\n                                onClick={handleAllRemove}\n                            >\n                                Remove All\n                            </Button>\n                        )}\n                    </div>\n                </div>\n            </SimpleCard>\n        </div>\n    )\n}\n\nexport default UploadForm\n"]},"metadata":{},"sourceType":"module"}